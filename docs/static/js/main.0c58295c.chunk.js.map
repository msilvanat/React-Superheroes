{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcSreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","components/ui/Navbar.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashboardRoutes.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","protoType","PropTypes","bool","isRequired","func","PublicRoute","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","getItem","name","replace","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcSreen","HeroScreen","heroeId","useParams","find","length","push","goBack","MarvelScreen","Navbar","user","useHistory","activeClassName","exact","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"0JAEaA,EAAcC,0B,OCAdC,EAEF,eAFEA,EAGD,gBCHCC,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAE/C,OAAQA,EAAOC,MACX,KAAKJ,EAED,OAAO,2BACAG,EAAOE,SADd,IAEIC,QAAQ,IAGhB,KAAKN,EACD,MAAO,CACHM,QAAQ,GAGhB,QACI,OAAOJ,I,6CCbNK,EAAe,SAAC,GAMtB,IAJHC,EAIE,EAJFA,gBACWC,EAGT,EAHFC,UACGC,EAED,+CAKF,OAFAC,aAAaC,QAAQ,WAAYF,EAAKG,SAASC,UAG3C,cAAC,IAAD,2BAAWJ,GAAX,IACID,UAAW,SAACM,GAAD,OACNR,EACM,cAACC,EAAD,eAAeO,IACf,cAAC,IAAD,CAAUC,GAAG,gBAOpCV,EAAaW,UAAY,CACrBV,gBAAiBW,IAAUC,KAAKC,WAChCX,UAAWS,IAAUG,KAAKD,YCzBvB,IAAME,EAAc,SAAC,GAMrB,IAJHf,EAIE,EAJFA,gBACWC,EAGT,EAHFC,UACGC,EAED,+CAEF,OACI,cAAC,IAAD,2BAAYA,GAAZ,IACID,UAAW,SAACM,GAAD,OACLR,EAEK,cAAC,IAAD,CAAUS,GAAG,MADb,cAACR,EAAD,eAAeO,SAQtCO,EAAYL,UAAY,CACpBV,gBAAiBW,IAAUC,KAAKC,WAChCX,UAAWS,IAAUG,KAAKD,YCvBvB,IAAMG,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAElBC,EAAaC,qBAAW7B,GAAxB4B,SAeR,OACI,sBAAKE,UAAU,iBAAf,UACI,uCACA,uBAEA,wBACIA,UAAU,kBACVC,QApBQ,WAEhB,IAAMC,EAAWlB,aAAamB,QAAQ,aAAe,IAGrDL,EAAS,CACLtB,KAAMJ,EACNK,QAAS,CACL2B,KAAM,aAGdP,EAAQQ,QAASH,IAOb,uBC1BCI,EAAS,CAClB,CACI,GAAM,YACN,UAAY,SACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,uBACnB,WAAa,eAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,YACZ,UAAY,SACZ,iBAAmB,mBACnB,WAAa,UAEjB,CACI,GAAM,WACN,UAAY,QACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,kBACnB,WAAa,oDAEjB,CACI,GAAM,WACN,UAAY,gBACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,0BACnB,WAAa,6FAEjB,CACI,GAAM,WACN,UAAY,cACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,YACN,UAAY,eACZ,UAAY,YACZ,UAAY,iBACZ,iBAAmB,qBACnB,WAAa,kBAEjB,CACI,GAAM,aACN,UAAY,oBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,wBACnB,WAAa,qBAEjB,CACI,GAAM,WACN,UAAY,kBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,uBACnB,WAAa,gBAEjB,CACI,GAAM,UACN,UAAY,cACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,qCAEjB,CACI,GAAM,WACN,UAAY,eACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,mBACnB,WAAa,4BAEjB,CACI,GAAM,gBACN,UAAY,aACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,iBACN,UAAY,kBACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,4BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,gBACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,cAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,0BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,yBACnB,WAAa,gBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,2BACnB,WAAa,iBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,0BACZ,iBAAmB,eACnB,WAAa,2BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,yBACZ,iBAAmB,wBACnB,WAAa,0BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,WACnB,WAAa,iBAEjB,CACI,GAAM,gBACN,UAAY,gBACZ,UAAY,gBACZ,UAAY,cACZ,iBAAmB,yBACnB,WAAa,gBC5JRC,EAAW,SAAC,GAMlB,IALHC,EAKE,EALFA,GACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,iBACAC,EACE,EADFA,WAEA,OACI,qBAAKZ,UAAU,YAAYa,MAAO,CAAEC,SAAU,KAA9C,SACI,sBAAKd,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKe,IAAG,0BAAqBP,EAArB,QAA+BR,UAAU,WAAWgB,IAAKP,MAErE,qBAAKT,UAAU,WAAf,SAEI,sBAAKA,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,cAA6BS,EAA7B,OACA,oBAAGT,UAAU,YAAb,cAA2BU,EAA3B,OAGKA,IAAcE,GACZ,oBAAGZ,UAAU,YAAb,cAA2BY,EAA3B,OAGP,mBAAGZ,UAAU,YAAb,SACI,wBAAOA,UAAU,aAAjB,cAAgCW,EAAhC,SAGJ,cAAC,IAAD,CAAMtB,GAAE,iBAAYmB,GAApB,gCC3BXS,EAAW,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAElBZ,EAASa,mBAAQ,kBCJU,SAACD,GAIjC,IAFwB,CAAC,YAAa,iBAEjBE,SAASF,GAC1B,MAAM,IAAIG,MAAJ,qBAAwBH,EAAxB,kBAGV,OAAOZ,EAAOgB,QAAO,SAAAC,GAAI,OAAIA,EAAKL,YAAcA,KDJpBM,CAAsBN,KAAY,CAACA,IAE/D,OACI,qBAAKlB,UAAU,iDAAf,SAEQM,EAAOmB,KAAI,SAAAF,GAAI,OACX,cAAC,EAAD,eACQA,GADOA,EAAKf,UET3BkB,EAAU,WACnB,OACI,gCACI,0CACA,uBAEA,cAAC,EAAD,CAAUR,UAAU,kBCHnBS,EAAa,SAAC,GAAiB,IAAf9B,EAAc,EAAdA,QAEjB+B,EAAYC,cAAZD,QAEFL,EAAOJ,mBAAQ,kBCRGX,EDQeoB,ECLhCtB,EAAOwB,MAAK,SAAAP,GAAI,OAAIA,EAAKf,KAAOA,KAHhB,IAACA,IDQyB,CAACoB,IAGlD,IAAKL,EACD,OAAO,cAAC,IAAD,CAAUlC,GAAG,MAIxB,IAUIoB,EAKAc,EALAd,UACAS,EAIAK,EAJAL,UACAR,EAGAa,EAHAb,UACAC,EAEAY,EAFAZ,iBACAC,EACAW,EADAX,WAGJ,OACI,sBAAKZ,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBACIe,IAAG,0BAAqBa,EAArB,QACHZ,IAAKP,EACLT,UAAU,0DAIlB,sBAAKA,UAAU,0CAAf,UACI,mCAAMS,EAAN,OACA,qBAAIT,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,cAAiC,6CAAjC,IAAsDU,EAAtD,OACA,qBAAIV,UAAU,kBAAd,cAAiC,6CAAjC,IAAsDkB,EAAtD,OACA,qBAAIlB,UAAU,kBAAd,cAAiC,oDAAjC,IAA6DW,EAA7D,UAGJ,8CACA,kCAAKC,EAAL,OAEA,wBACIZ,UAAU,uBACVC,QAxCK,WACbJ,EAAQkC,QAAU,EAClBlC,EAAQmC,KAAK,KAEbnC,EAAQoC,SAEZpC,EAAQoC,UAgCA,2BErDHC,EAAe,WACxB,OACI,gCACI,+CACA,uBAEA,cAAC,EAAD,CAAUhB,UAAU,sBCJnBiB,EAAS,WAElB,MAAiCpC,qBAAW7B,GAA/BkC,EAAb,EAAOgC,KAAMhC,KAAON,EAApB,EAAoBA,SACdD,EAAUwC,cAWhB,OACI,sBAAKrC,UAAU,gDAAf,UAEI,cAAC,IAAD,CACIA,UAAU,yBACVX,GAAG,IAFP,0BAOA,qBAAKW,UAAU,kBAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,cAAC,IAAD,CACIsC,gBAAgB,SAChBtC,UAAU,8BACVuC,OAAK,EACLlD,GAAG,UAJP,oBASA,cAAC,IAAD,CACIiD,gBAAgB,SAChBtC,UAAU,8BACVuC,OAAK,EACLlD,GAAG,MAJP,gBASA,cAAC,IAAD,CACIiD,gBAAgB,SAChBtC,UAAU,8BACVuC,OAAK,EACLlD,GAAG,UAJP,yBAWR,qBAAKW,UAAU,wDAAf,SACI,qBAAIA,UAAU,qBAAd,UAEI,sBACIA,UAAU,8BADd,SAEUI,IAEV,wBAEIJ,UAAU,kCACVC,QA7DC,WAEjBJ,EAAQQ,QAAQ,UAEhBP,EAAS,CACLtB,KAAMJ,KAqDE,6B,yBC7DPoE,EAAe,SAAC,GAAiB,IAAf3C,EAAc,EAAdA,QAErBX,EAAWuD,cACjB,EAAmBC,IAAYC,MAAMzD,EAAS0D,QAAtCC,SAAR,MAAY,GAAZ,EAEA,ECTmB,WAA0B,IAAxBC,EAAuB,uDAAR,GAEpC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAeA,MAAO,CAAED,EATiB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAEzBD,EAAU,2BACHD,GADE,kBAEHE,EAAO9C,KAAQ8C,EAAOC,UARlB,WACVF,EAAWH,KDIyBM,CAAQ,CAC5CC,WAAYR,IADhB,mBAAOS,EAAP,KAAmBC,EAAnB,KAIQF,EAAeC,EAAfD,WAEFG,EAAiBrC,mBAAQ,kBEhBJ,WAAkB,IAAhBf,EAAe,uDAAR,GAEpC,MAAa,KAATA,EACO,IAGXA,EAAOA,EAAKqD,oBACLnD,EAAOgB,QAAQ,SAAAC,GAAI,OAAIA,EAAKd,UAAUgD,oBAAoBrC,SAAUhB,OFStCsD,CAAiBb,KAAK,CAACA,IAO5D,OACI,gCACI,gDACA,uBAEA,sBAAK7C,UAAU,MAAf,UAEI,sBAAKA,UAAU,QAAf,UACI,+CACA,uBAEA,uBAAM2D,SAhBD,SAACC,GAClBA,EAAEC,iBACFhE,EAAQmC,KAAR,aAAmBqB,KAcP,UACI,uBACI7E,KAAK,OACLsF,YAAY,iBACZ9D,UAAU,eACVI,KAAK,aACL2D,aAAa,MACbZ,MAAOE,EACPW,SAAUT,IAGd,wBACI/E,KAAK,SACLwB,UAAU,wCAFd,6BAUR,sBAAKA,UAAU,QAAf,UAEI,2CACA,uBAGW,KAAN6C,GAED,qBAAK7C,UAAU,mBAAf,2BAMO,KAAN6C,GAAsC,IAA1BW,EAAezB,QAE5B,sBAAK/B,UAAU,qBAAf,qCAC6B6C,KAK7BW,EAAe/B,KAAI,SAAAF,GAAI,OACnB,cAAC,EAAD,eAGQA,GADCA,EAAKf,iBG1E7ByD,EAAkB,WAG3B,OACI,qCACI,cAAC,EAAD,IACA,qBAAKjE,UAAU,iBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuC,OAAK,EAAC2B,KAAK,UAAUpF,UAAWoD,IACvC,cAAC,IAAD,CAAOK,OAAK,EAAC2B,KAAK,iBAAiBpF,UAAY6C,IAC/C,cAAC,IAAD,CAAOY,OAAK,EAAC2B,KAAK,MAAMpF,UAAY4C,IACpC,cAAC,IAAD,CAAOa,OAAK,EAAC2B,KAAK,UAAUpF,UAAY0D,IAExC,cAAC,IAAD,CAAUnD,GAAG,qBCLpB8E,EAAY,WAErB,IAAQ/B,EAASrC,qBAAW7B,GAApBkE,KAER,OACI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAaG,OAAK,EAAC2B,KAAK,SAASpF,UAAWc,EACxChB,gBAAiBwD,EAAK1D,SAG1B,cAAC,EAAD,CAAcwF,KAAK,IAAIpF,UAAWmF,EAC9BrF,gBAAiBwD,EAAK1D,iBCtBxC0F,EAAO,WACT,OAAOC,KAAK1B,MAAM3D,aAAamB,QAAQ,UAAY,CAAEzB,QAAS,IAGrD4F,EAAY,WACrB,MAA0BC,qBAAWlG,EAAa,GAAI+F,GAAtD,mBAAQhC,EAAR,KAActC,EAAd,KASA,OAJA0E,qBAAU,WACNxF,aAAaC,QAAS,OAAQoF,KAAKI,UAAUrC,MAC9C,CAACA,IAIA,aADA,CACClE,EAAYwG,SAAb,CAAsBvB,MAAO,CAAEf,OAAMtC,YAArC,SACI,cAAC,EAAD,OCpBZ6E,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.0c58295c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext(); ","\n\nexport const types = {\n\n    login: '[auth] login',\n    logout: '[auth] logout',\n\n}","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n\n    switch (action.type) {\n        case types.login:\n\n            return {\n                ...action.payload,\n                logged: true\n            }\n\n        case types.logout:\n            return {\n                logged: false\n            }\n\n        default:\n            return state;\n    }\n\n}","\nimport React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n\n    isAuthenticated,\n    component: Component,\n    ...rest  // el resto de los elementos \n\n}) => {\n\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)  // si esta autenticado, quiero regresar el componente al cual el usuario quiere entrar\n                    ? (<Component {...props} />)\n                    : (<Redirect to=\"/login\" />)\n            )}\n\n        />\n    )\n}\n\nPrivateRoute.protoType = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n\n}","\nimport React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n\n    isAuthenticated,\n    component: Component,\n    ...rest  // el resto de los elementos \n\n}) => {\n\n    return (\n        <Route  {...rest}\n            component={(props) => (\n                (!isAuthenticated)  // si esta autenticado, quiero regresar el componente al cual el usuario quiere entrar\n                    ? (<Component {...props} />)\n                    : (<Redirect to=\"/\" />)\n            )}\n\n        />\n    )\n}\n\nPublicRoute.protoType = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n\n}","import React, { useContext } from 'react';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const LoginScreen = ({ history }) => {\n\n    const { dispatch } = useContext(AuthContext);\n\n    const handleLogin = () => {\n\n        const lastPath = localStorage.getItem('lastPath') || '/';\n\n\n        dispatch({\n            type: types.login,\n            payload: {\n                name: 'Silvana'\n            }\n        });\n        history.replace( lastPath );\n    }\n    return (\n        <div className=\"container mt-5\">\n            <h1>Login</h1>\n            <hr />\n\n            <button\n                className=\"btn btn-primary\"\n                onClick={handleLogin}\n            >\n                Login\n            </button>\n\n        </div>\n    )\n}\n","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero':'Batman', \n        'publisher':'DC Comics', \n        'alter_ego':'Bruce Wayne',\n        'first_appearance':'Detective Comics #27',\n        'characters':'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero':'Superman', \n        'publisher':'DC Comics', \n        'alter_ego':'Kal-El',\n        'first_appearance':'Action Comics #1',\n        'characters':'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero':'Flash', \n        'publisher':'DC Comics', \n        'alter_ego':'Jay Garrick',\n        'first_appearance':'Flash Comics #1',\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero':'Green Lantern', \n        'publisher':'DC Comics', \n        'alter_ego':'Alan Scott',\n        'first_appearance':'All-American Comics #16',\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero':'Green Arrow', \n        'publisher':'DC Comics', \n        'alter_ego':'Oliver Queen',\n        'first_appearance':'More Fun Comics #73',\n        'characters':'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero':'Wonder Woman', \n        'publisher':'DC Comics', \n        'alter_ego':'Princess Diana',\n        'first_appearance':'All Star Comics #8',\n        'characters':'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero':'Martian Manhunter', \n        'publisher':'DC Comics', \n        'alter_ego':'J\\'onn J\\'onzz',\n        'first_appearance':'Detective Comics #225',\n        'characters':'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero':'Robin/Nightwing', \n        'publisher':'DC Comics', \n        'alter_ego':'Dick Grayson',\n        'first_appearance':'Detective Comics #38',\n        'characters':'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero':'Blue Beetle', \n        'publisher':'DC Comics', \n        'alter_ego':'Dan Garret',\n        'first_appearance':'Mystery Men Comics #1',\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero':'Black Canary', \n        'publisher':'DC Comics', \n        'alter_ego':'Dinah Drake',\n        'first_appearance':'Flash Comics #86',\n        'characters':'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero':'Spider Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Peter Parker',\n        'first_appearance':'Amazing Fantasy #15',\n        'characters':'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero':'Captain America', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Steve Rogers',\n        'first_appearance':'Captain America Comics #1',\n        'characters':'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero':'Iron Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Tony Stark',\n        'first_appearance':'Tales of Suspense #39',\n        'characters':'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero':'Thor', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Thor Odinson',\n        'first_appearance':'Journey into Myster #83',\n        'characters':'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero':'Hulk', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Bruce Banner',\n        'first_appearance':'The Incredible Hulk #1',\n        'characters':'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero':'Wolverine', \n        'publisher':'Marvel Comics', \n        'alter_ego':'James Howlett',\n        'first_appearance':'The Incredible Hulk #180',\n        'characters':'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero':'Daredevil', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Matthew Michael Murdock',\n        'first_appearance':'Daredevil #1',\n        'characters':'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero':'Hawkeye', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Clinton Francis Barton',\n        'first_appearance':'Tales of Suspense #57',\n        'characters':'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero':'Cyclops', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Scott Summers',\n        'first_appearance':'X-Men #1',\n        'characters':'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero':'Silver Surfer', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Norrin Radd',\n        'first_appearance':'The Fantastic Four #48',\n        'characters':'Norrin Radd'\n    }\n]","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const HeroCard = ({   // props\n    id,\n    superhero,\n    alter_ego,\n    first_appearance,\n    characters,\n}) => {\n    return (\n        <div className=\"card ms-3\" style={{ maxWidth: 540 }}>\n            <div className=\"row no-gutters\">\n                <div className=\"col-md-4\">\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero} />\n                </div>\n                <div className=\"col-md-8\">\n\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\"> {superhero} </h5>\n                        <p className=\"card-text\"> {alter_ego} </p>\n\n                        {\n                            (alter_ego !== characters)\n                            && <p className=\"card-text\"> {characters} </p>\n                        }\n\n                        <p className=\"card-text\">\n                            <small className=\"text-muted\"> {first_appearance} </small>\n                        </p>\n\n                        <Link to={`./hero/${id}`}>\n                            More...\n                        </Link>\n\n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n    )\n\n}\n","import React, { useMemo } from 'react';\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\nimport { HeroCard } from './HeroCard';\n\nexport const HeroList = ({ publisher }) => {\n\n   const heroes = useMemo(() => getHeroesByPublisher( publisher), [publisher ] );\n\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            {\n                heroes.map(hero => (\n                    <HeroCard key={hero.id} \n                        {...hero } \n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByPublisher = (publisher) => {\n\n    const validPublishers = ['DC Comics', 'Marvel Comics'];  // array\n\n    if (!validPublishers.includes(publisher)) {  // if \n        throw new Error(`Publisher \"${publisher}\" It is wrong`);\n    }\n\n    return heroes.filter(hero => hero.publisher === publisher);\n\n}","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const DcSreen = () => {\n    return (\n        <div>\n            <h1>DC Sreen</h1>\n            <hr />\n\n            <HeroList publisher=\"DC Comics\" />\n            \n        </div>\n    )\n}\n","import React, { useMemo } from 'react';\nimport { Redirect, useParams } from 'react-router';\nimport { getHeroById } from '../../selectors/getHeroById';\n\n// Hook que extrae los parámetros que van por el URL\n\nexport const HeroScreen = ({ history }) => {\n\n    const { heroeId } = useParams();\n\n    const hero = useMemo(() => getHeroById(heroeId), [heroeId]);\n\n    // Validation - si el argumeno qe recbo por url no se encuentra, saco al usuario \n    if (!hero) {\n        return <Redirect to=\"/\" />;\n    }\n\n    // Regresar a la página anterior\n    const handleReturn = () => {\n        if (history.length <= 2) {  //validación\n            history.push('/');      //regresa a la página principal \n        } else {\n            history.goBack();\n        }\n        history.goBack();\n    }\n\n    const {\n        superhero,\n        publisher,\n        alter_ego,\n        first_appearance,\n        characters,\n    } = hero;\n\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-4\">\n                <img\n                    src={`./assets/heroes/${heroeId}.jpg`}\n                    alt={superhero}\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n                />\n            </div>\n\n            <div className=\"col-8 animate__animated animate__fadeIn\">\n                <h3> {superhero} </h3>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\"> <b> Alter ego: </b> {alter_ego} </li>\n                    <li className=\"list-group-item\"> <b> Publisher: </b> {publisher} </li>\n                    <li className=\"list-group-item\"> <b> First appearance: </b> {first_appearance} </li>\n                </ul>\n\n                <h5> Characters </h5>\n                <p> {characters} </p>\n\n                <button\n                    className=\"btn btn-outline-info\"\n                    onClick={handleReturn}\n                >\n                    Return\n                </button>\n\n            </div>\n\n        </div>\n    )\n}\n","import { heroes } from '../data/heroes';\n\nexport const getHeroById = (id) => {\n\n\n    return heroes.find(hero => hero.id === id);\n\n}","import React from 'react';\nimport { HeroList } from '../heroes/HeroList';\n\nexport const MarvelScreen = () => {\n    return (\n        <div>\n            <h1>Marvel Screen</h1>\n            <hr />\n\n            <HeroList publisher=\"Marvel Comics\" />\n\n\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const Navbar = () => {\n\n    const {user:{name}, dispatch } = useContext(AuthContext);\n    const history = useHistory();\n\n    const handleLogout = () => {\n\n        history.replace('/login');\n\n        dispatch({\n            type: types.logout\n        });\n    }\n    \n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger\">\n\n            <Link\n                className=\"navbar-brand text-dark\"\n                to=\"/\"\n            >\n                Asociaciones\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink\n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link text-dark\"\n                        exact\n                        to=\"/marvel\"\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink\n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link text-dark\"\n                        exact\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n\n                    <NavLink\n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link text-dark\"\n                        exact\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n\n                    <span\n                        className=\"nav-item nav-link text-dark\">\n                            { name }\n                    </span>\n                    <button\n                        \n                        className=\"nav-item nav-link text-dark btn\"\n                        onClick={ handleLogout }\n                        \n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import React, { useMemo } from 'react';\nimport queryString from 'query-string';\nimport { HeroCard } from '../heroes/HeroCard';\nimport { useForm } from '../../hooks/useForm';\nimport { useLocation } from 'react-router';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\nexport const SearchScreen = ({ history }) => {\n\n    const location = useLocation();\n    const { q = '' } = queryString.parse(location.search);\n\n    const [formValues, handleInputChange] = useForm({\n        searchText: q\n    });\n\n    const { searchText } = formValues;\n\n    const heroesFiltered = useMemo(() => getHeroesByName( q ), [q]);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        history.push(`?q=${searchText}`);\n    }\n\n    return (\n        <div>\n            <h1> Search Screen</h1>\n            <hr />\n\n            <div className=\"row\">\n\n                <div className=\"col-5\">\n                    <h4> Search Form </h4>\n                    <hr />\n\n                    <form onSubmit={handleSearch}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Find your hero\"\n                            className=\"form-control\"\n                            name=\"searchText\"\n                            autoComplete=\"off\"\n                            value={searchText}\n                            onChange={handleInputChange}\n                        />\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn m-1 btn-block btn-outline-primary\"\n                        >\n                            Search...\n                        </button>\n                    </form>\n\n                </div>\n\n                <div className=\"col-7\">\n\n                    <h4> Results </h4>\n                    <hr />\n\n                    {\n                        (q === '')\n                        &&\n                        <div className=\"alert alert-info\">\n                            Search a hero\n                            </div>\n                    }\n\n                    {\n                        (q !== '' && heroesFiltered.length === 0)\n                        &&\n                        <div className=\"alert alert-danger\">\n                            There is no a hero with {q}\n                        </div>\n                    }\n\n                    {\n                        heroesFiltered.map(hero => (\n                            <HeroCard\n\n                                key={hero.id}\n                                {...hero}\n                            />\n                        ))\n                    }\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import { heroes } from '../data/heroes';\n\nexport const getHeroesByName = ( name = '' ) => {\n\n    if( name === '') {\n        return [];\n    }\n\n    name = name.toLocaleLowerCase();\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes( name ));\n}","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { DcSreen } from '../components/dc/DcSreen';\nimport { HeroScreen } from '../components/heroes/HeroScreen';\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { Navbar } from '../components/ui/Navbar';\nimport { SearchScreen } from '../components/search/SearchScreen';\n\nexport const DashboardRoutes = () => {\n\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"container mt-2\">\n                <Switch>\n                    <Route exact path=\"/marvel\" component={MarvelScreen} />\n                    <Route exact path=\"/hero/:heroeId\" component={ HeroScreen } />\n                    <Route exact path=\"/dc\" component={ DcSreen } />\n                    <Route exact path=\"/search\" component={ SearchScreen } />\n\n                    <Redirect to=\"/marvel\"/>\n                </Switch>\n            </div>\n\n        </>\n    )\n}\n","import React, { useContext } from 'react';\nimport {\n    HashRouter as Router, \n    Switch,\n  } from \"react-router-dom\";\n\n\nimport { AuthContext } from '../auth/AuthContext';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\n\n\n\nexport const AppRouter = () => {\n\n    const { user } = useContext(AuthContext);\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute exact path=\"/login\" component={LoginScreen}\n                        isAuthenticated={user.logged}\n                    />\n\n                    <PrivateRoute path=\"/\" component={DashboardRoutes}\n                        isAuthenticated={user.logged}\n                    />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\n\n","import React, { useEffect, useReducer } from 'react';\nimport { AuthContext } from './auth/AuthContext';\nimport { authReducer } from './auth/authReducer';\nimport { AppRouter } from './routers/AppRouter';\n\n// siempre creo el init poeque voy a leer el localstrorage, para ver si tenemos ese objeto (el user)\n// si no existe el usuario retorno un objeto que tiene el logged en false \nconst init = () => {\n    return JSON.parse(localStorage.getItem('user')) || { logged : false };\n}\n\nexport const HeroesApp = () => {\n    const [ user, dispatch] = useReducer(authReducer, {}, init);\n\n    // Efecto que grabe en el localStorage que tenga como dependencia el usuario y que se dispare \n    // cada vez que el usuario cambia, y va a grabar en el localStorage\n\n    useEffect(() => {        \n        localStorage.setItem( 'user', JSON.stringify(user));\n    }, [user])\n\n    return (\n        // higher order component \n        <AuthContext.Provider value={{ user, dispatch }}>\n            <AppRouter />\n        </AuthContext.Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n  \n    <HeroesApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}